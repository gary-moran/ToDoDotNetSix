{"ast":null,"code":"import { map } from 'rxjs/operators';\nexport class UsernameValidator {\n  constructor(authenticationService) {\n    this.authenticationService = authenticationService;\n  }\n  validate(control) {\n    return this.authenticationService.isAlterEgoTaken(control.value).pipe(map(isTaken => isTaken ? {\n      uniqueAlterEgo: true\n    } : null), catchError(() => of(null)));\n  }\n}","map":{"version":3,"mappings":"AAOA,SAASA,GAAG,QAAQ,gBAAgB;AAGpC,OAAM,MAAOC,iBAAiB;EAE5BC,YAAoBC,qBAA4C;IAA5C,0BAAqB,GAArBA,qBAAqB;EAA2B;EAEpEC,QAAQ,CACNC,OAAwB;IAExB,OAAO,IAAI,CAACF,qBAAqB,CAACG,eAAe,CAACD,OAAO,CAACE,KAAK,CAAC,CAACC,IAAI,CACnER,GAAG,CAACS,OAAO,IAAKA,OAAO,GAAG;MAAEC,cAAc,EAAE;IAAI,CAAE,GAAG,IAAK,CAAC,EAC3DC,UAAU,CAAC,MAAMC,EAAE,CAAC,IAAI,CAAC,CAAC,CAC3B;EACH","names":["map","UsernameValidator","constructor","authenticationService","validate","control","isAlterEgoTaken","value","pipe","isTaken","uniqueAlterEgo","catchError","of"],"sourceRoot":"","sources":["C:\\Projects\\web\\ToDoDotNetSix\\ToDoDotNetSixWeb\\ClientApp\\src\\app\\shared\\validators\\username.validator.ts"],"sourcesContent":["import {\r\n  AbstractControl,\r\n  AsyncValidator,\r\n  AsyncValidatorFn,\r\n  ValidationErrors,\r\n} from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\nexport class UsernameValidator implements AsyncValidator {\r\n\r\n  constructor(private authenticationService: AuthenticationService) { }\r\n\r\n  validate(\r\n    control: AbstractControl\r\n  ): Observable<ValidationErrors | null> {\r\n    return this.authenticationService.isAlterEgoTaken(control.value).pipe(\r\n      map(isTaken => (isTaken ? { uniqueAlterEgo: true } : null)),\r\n      catchError(() => of(null))\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}