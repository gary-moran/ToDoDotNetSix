{"ast":null,"code":"import _asyncToGenerator from \"C:/Projects/web/ToDoDotNetSix/ToDoDotNetSixWeb/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport { ControlValidation } from '../../shared/utilities/control-validation';\nimport { ElementFocus } from '../../shared/utilities/element-focus';\nimport { Whitelist } from '../../shared/models/whitelist';\nimport { TextValidators } from '../../shared/validators/text.validator';\nimport { Login } from '../../shared/models/login';\nimport { take } from 'rxjs';\nimport { Message } from '../../shared/models/message';\nimport { MessageType } from '../../shared/models/message-type.enum';\nimport { UsernameValidator } from '../../shared/validators/username.validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../shared/services/authentication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../shared/services/whitelist.service\";\nimport * as i5 from \"../../shared/services/message.service\";\nimport * as i6 from \"../../shared/services/view-model-data.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../shared/components/element-validation-message/element-validation-message.component\";\nfunction RegisterComponent_form_6_element_validation_message_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"element-validation-message\", 27);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"model\", ctx_r1.registerForm.get(\"firstname\"));\n  }\n}\nfunction RegisterComponent_form_6_element_validation_message_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"element-validation-message\", 27);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"model\", ctx_r2.registerForm.get(\"lastname\"));\n  }\n}\nfunction RegisterComponent_form_6_element_validation_message_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"element-validation-message\", 27);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"model\", ctx_r3.registerForm.get(\"email\"));\n  }\n}\nfunction RegisterComponent_form_6_element_validation_message_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"element-validation-message\", 27);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"model\", ctx_r4.registerForm.get(\"username\"));\n  }\n}\nfunction RegisterComponent_form_6_element_validation_message_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"element-validation-message\", 27);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"model\", ctx_r5.registerForm.get(\"passwordGroup.password\"));\n  }\n}\nfunction RegisterComponent_form_6_element_validation_message_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"element-validation-message\", 27);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"model\", ctx_r6.registerForm.get(\"passwordGroup.confirmPassword\"));\n  }\n}\nfunction RegisterComponent_form_6_element_validation_message_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"element-validation-message\", 27);\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"model\", ctx_r7.registerForm.get(\"passwordGroup\"));\n  }\n}\nfunction RegisterComponent_form_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_form_6_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onRegister());\n    });\n    i0.ɵɵelementStart(1, \"div\", 7)(2, \"div\", 8);\n    i0.ɵɵelement(3, \"input\", 9);\n    i0.ɵɵtemplate(4, RegisterComponent_form_6_element_validation_message_4_Template, 1, 1, \"element-validation-message\", 10);\n    i0.ɵɵelementStart(5, \"label\", 11);\n    i0.ɵɵtext(6, \"First Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 8);\n    i0.ɵɵelement(8, \"input\", 12);\n    i0.ɵɵtemplate(9, RegisterComponent_form_6_element_validation_message_9_Template, 1, 1, \"element-validation-message\", 10);\n    i0.ɵɵelementStart(10, \"label\", 13);\n    i0.ɵɵtext(11, \"Last Name\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"div\", 7)(13, \"div\", 14);\n    i0.ɵɵelement(14, \"input\", 15);\n    i0.ɵɵtemplate(15, RegisterComponent_form_6_element_validation_message_15_Template, 1, 1, \"element-validation-message\", 10);\n    i0.ɵɵelementStart(16, \"label\", 16);\n    i0.ɵɵtext(17, \"Email\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"div\", 7)(19, \"div\", 8);\n    i0.ɵɵelement(20, \"input\", 17);\n    i0.ɵɵtemplate(21, RegisterComponent_form_6_element_validation_message_21_Template, 1, 1, \"element-validation-message\", 10);\n    i0.ɵɵelementStart(22, \"label\", 18);\n    i0.ɵɵtext(23, \"Username\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(24, \"div\", 19)(25, \"div\", 8);\n    i0.ɵɵelement(26, \"input\", 20);\n    i0.ɵɵtemplate(27, RegisterComponent_form_6_element_validation_message_27_Template, 1, 1, \"element-validation-message\", 10);\n    i0.ɵɵelementStart(28, \"label\", 21);\n    i0.ɵɵtext(29, \"Password\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(30, \"div\", 8);\n    i0.ɵɵelement(31, \"input\", 22);\n    i0.ɵɵtemplate(32, RegisterComponent_form_6_element_validation_message_32_Template, 1, 1, \"element-validation-message\", 10);\n    i0.ɵɵtemplate(33, RegisterComponent_form_6_element_validation_message_33_Template, 1, 1, \"element-validation-message\", 10);\n    i0.ɵɵelementStart(34, \"label\", 23);\n    i0.ɵɵtext(35, \"Confirm Password\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(36, \"div\", 24)(37, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function RegisterComponent_form_6_Template_button_click_37_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onRegister());\n    });\n    i0.ɵɵtext(38, \"Register\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function RegisterComponent_form_6_Template_button_click_39_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onCancel());\n    });\n    i0.ɵɵtext(40, \"Cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_7_0;\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.registerForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.elementHasFocus(\"firstname\") && ctx_r0.isControlInvalid(ctx_r0.registerForm.get(\"firstname\")));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.elementHasFocus(\"lastname\") && ctx_r0.isControlInvalid(ctx_r0.registerForm.get(\"lastname\")));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.elementHasFocus(\"email\") && ctx_r0.isControlInvalid(ctx_r0.registerForm.get(\"email\")));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.elementHasFocus(\"username\") && ctx_r0.isControlInvalid(ctx_r0.registerForm.get(\"username\")));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.elementHasFocus(\"password\") && ctx_r0.isControlInvalid(ctx_r0.registerForm.get(\"passwordGroup.password\")));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.elementHasFocus(\"passwordGroup.confirmPassword\") && ctx_r0.isControlInvalid(ctx_r0.registerForm.get(\"passwordGroup.confirmPassword\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.elementHasFocus(\"confirmPassword\") && ((tmp_7_0 = ctx_r0.registerForm.get(\"passwordGroup\")) == null ? null : tmp_7_0.invalid));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isProcessing || !ctx_r0.registerForm.valid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isProcessing);\n  }\n}\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(authenticationService, router, formBuilder, whitelistService, messageService, viewModelDataservice) {\n      this.authenticationService = authenticationService;\n      this.router = router;\n      this.formBuilder = formBuilder;\n      this.whitelistService = whitelistService;\n      this.messageService = messageService;\n      this.viewModelDataservice = viewModelDataservice;\n      this.elementHasFocus = ElementFocus.elementHasFocus;\n      this.isControlInvalid = ControlValidation.isInvalid;\n      this.nameWhitelist = new Whitelist();\n      this.descWhitelist = new Whitelist();\n      this.usernameWhitelist = new Whitelist();\n      this.passwordWhitelist = new Whitelist();\n      this.isProcessing = false;\n    }\n    ngOnInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.nameWhitelist = yield _this.whitelistService.getWhitelist(\"NAME\");\n        _this.descWhitelist = yield _this.whitelistService.getWhitelist(\"DESC\");\n        _this.usernameWhitelist = yield _this.whitelistService.getWhitelist(\"USERNAME\");\n        _this.passwordWhitelist = yield _this.whitelistService.getWhitelist(\"PASSWORD\");\n        _this.initForm();\n      })();\n    }\n    /**\r\n     * Initialise Form\r\n     */\n    initForm() {\n      this.registerForm = this.formBuilder.group({\n        firstname: ['', {\n          validators: [Validators.required, TextValidators.whitelistValidator(this.nameWhitelist)],\n          updateOn: 'blur'\n        }],\n        lastname: ['', {\n          validators: [Validators.required, TextValidators.whitelistValidator(this.nameWhitelist)],\n          updateOn: 'blur'\n        }],\n        email: ['', {\n          validators: [Validators.required, TextValidators.whitelistValidator(this.descWhitelist), TextValidators.minLengthValidator(5), TextValidators.emailValidator()],\n          updateOn: 'blur'\n        }],\n        username: ['', {\n          validators: [Validators.required, TextValidators.whitelistValidator(this.usernameWhitelist), TextValidators.minLengthValidator(4), UsernameValidator.createValidator(this.authenticationService)],\n          updateOn: 'blur'\n        }],\n        passwordGroup: this.formBuilder.group({\n          password: ['', {\n            validators: [Validators.required, TextValidators.whitelistValidator(this.passwordWhitelist), TextValidators.minLengthValidator(8)],\n            updateOn: 'blur'\n          }],\n          confirmPassword: ['', {\n            validators: [Validators.required],\n            updateOn: 'blur'\n          }]\n        }, {\n          validator: TextValidators.matchValidator(\"password\", \"confirmPassword\", true)\n        })\n      });\n    }\n    /**\r\n     * Register\r\n     */\n    onRegister() {\n      this.isProcessing = true;\n      const login = new Login(this.registerForm.value);\n      login.password = this.registerForm?.get(\"passwordGroup.password\")?.value ?? \"\";\n      this.viewModelDataservice.actionViewModel(login, \"account\", \"New\").pipe(take(1)).subscribe(() => {\n        this.messageService.sendMessage(new Message(\"nav-menu\", \"User successfully created.\", MessageType.Info));\n        this.router.navigate([\"/login\"]);\n        this.isProcessing = false;\n      }, error => {\n        if (error.status === 400) this.messageService.sendMessage(new Message(\"nav-menu\", \"Unable to create user.\", MessageType.Danger));else this.messageService.sendErrorMessage(error);\n        this.isProcessing = false;\n      });\n    }\n    /**\r\n     * Cancel\r\n     */\n    onCancel() {\n      this.isProcessing = true;\n      this.registerForm.patchValue(new Login());\n      this.registerForm.get(\"passwordGroup\")?.patchValue({\n        \"password\": \"\",\n        \"confirmPassword\": \"\"\n      });\n      this.isProcessing = false;\n    }\n  }\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.WhitelistService), i0.ɵɵdirectiveInject(i5.MessageService), i0.ɵɵdirectiveInject(i6.ViewModelDataService));\n  };\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[\"role\", \"main\", 1, \"container\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"g-2\"], [1, \"mb-2\", \"form-floating\", \"col-md-6\"], [\"id\", \"firstname\", \"type\", \"text\", \"formControlName\", \"firstname\", \"placeholder\", \"firstname\", \"maxLength\", \"100\", 1, \"form-control\"], [3, \"model\", 4, \"ngIf\"], [\"for\", \"firstname\", 1, \"form-label\"], [\"id\", \"lastname\", \"type\", \"text\", \"formControlName\", \"lastname\", \"placeholder\", \"lastname\", \"maxLength\", \"100\", 1, \"form-control\"], [\"for\", \"lastname\", 1, \"form-label\"], [1, \"mb-2\", \"form-floating\", \"col\"], [\"id\", \"email\", \"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"email\", \"maxLength\", \"256\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"id\", \"username\", \"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"username\", \"maxLength\", \"40\", 1, \"form-control\"], [\"for\", \"username\", 1, \"form-label\"], [\"formGroupName\", \"passwordGroup\", 1, \"row\", \"g-2\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"password\", \"maxLength\", \"40\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"id\", \"confirmPassword\", \"type\", \"password\", \"formControlName\", \"confirmPassword\", \"placeholder\", \"confirmPassword\", \"maxLength\", \"40\", 1, \"form-control\"], [\"for\", \"confirmPassword\", 1, \"form-label\"], [1, \"gap-2\", \"d-flex\", \"justify-content-end\"], [\"type\", \"submit\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [3, \"model\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"main\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\", 3);\n        i0.ɵɵtext(4, \"Register\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtemplate(6, RegisterComponent_form_6_Template, 41, 10, \"form\", 5);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm);\n      }\n    },\n    dependencies: [i7.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i8.ElementValidationMessageComponent],\n    encapsulation: 2\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}