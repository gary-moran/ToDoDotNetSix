{"ast":null,"code":"import _asyncToGenerator from \"C:/Projects/web/ToDoDotNetSix/ToDoDotNetSixWeb/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ModalDialogComponent, ModalReturn } from \"../components/modal-dialog/modal-dialog.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nexport class ModalDialogService {\n  constructor(modalService) {\n    this.modalService = modalService;\n  }\n  /**\r\n   * Call Modal Dialog\r\n   * @param modalType\r\n   * @returns\r\n   */\n  callModalDialog(modalType) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let modalReturn = ModalReturn.Close;\n      const modal = _this.modalService.open(ModalDialogComponent);\n      modal.componentInstance.modalType = modalType;\n      yield modal.result.then(result => {\n        modalReturn = result;\n      });\n      return modalReturn;\n    })();\n  }\n}\nModalDialogService.ɵfac = function ModalDialogService_Factory(t) {\n  return new (t || ModalDialogService)(i0.ɵɵinject(i1.NgbModal));\n};\nModalDialogService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ModalDialogService,\n  factory: ModalDialogService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAiBA,SAASA,oBAAoB,EAAaC,WAAW,QAAQ,mDAAmD;;;AAKhH,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,YAAsB;IAAtB,iBAAY,GAAZA,YAAY;EAAe;EAE/C;;;;;EAKaC,eAAe,CAACC,SAAoB;IAAA;IAAA;MAE/C,IAAIC,WAAW,GAAgBN,WAAW,CAACO,KAAK;MAEhD,MAAMC,KAAK,GAAG,KAAI,CAACL,YAAY,CAACM,IAAI,CAACV,oBAAoB,CAAC;MAC1DS,KAAK,CAACE,iBAAiB,CAACL,SAAS,GAAGA,SAAS;MAC7C,MAAMG,KAAK,CAACG,MAAM,CAACC,IAAI,CAACD,MAAM,IAAG;QAAGL,WAAW,GAAGK,MAAM;MAAC,CAAC,CAAC;MAE3D,OAAOL,WAAW;IAAC;EACrB;;AAlBWL,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAY,SAAlBZ,kBAAkB;EAAAa,YAFjB;AAAM","names":["ModalDialogComponent","ModalReturn","ModalDialogService","constructor","modalService","callModalDialog","modalType","modalReturn","Close","modal","open","componentInstance","result","then","factory","providedIn"],"sourceRoot":"","sources":["C:\\Projects\\web\\ToDoDotNetSix\\ToDoDotNetSixWeb\\ClientApp\\src\\app\\shared\\services\\modal-dialog.service.ts"],"sourcesContent":["/**************************************************************************\r\n*\r\n*  System:    ToDo (Web)\r\n*  Module:    Client App \\ Shared \\ Services\r\n*  Date:      03 AUG 2023\r\n*  Author:    Gary Moran (GM)\r\n*  Function:  Modal Dialog Service\r\n*  Notes:\r\n*\r\n*                   : History of Amendments :\r\n*  Date        Name        Brief description                \r\n*  ----------- ----------  ---------------------------------------------\r\n*  03 AUG 2023 GM          Created\r\n************************************************************************/\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { ModalDialogComponent, ModalType, ModalReturn } from \"../components/modal-dialog/modal-dialog.component\"\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalDialogService {\r\n\r\n  constructor(private modalService: NgbModal,) { }\r\n\r\n  /**\r\n   * Call Modal Dialog\r\n   * @param modalType\r\n   * @returns\r\n   */\r\n  public async callModalDialog(modalType: ModalType): Promise<ModalReturn> {\r\n\r\n    let modalReturn: ModalReturn = ModalReturn.Close;\r\n\r\n    const modal = this.modalService.open(ModalDialogComponent);\r\n    modal.componentInstance.modalType = modalType;\r\n    await modal.result.then(result => { modalReturn = result })\r\n\r\n    return modalReturn;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}