{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Generic } from '../models/generic';\nimport * as i0 from \"@angular/core\";\nexport class UsernameValidator {\n  static createValidator(viewModelDataservice) {\n    return control => {\n      return viewModelDataservice.actionViewModel(new Generic(control.value), \"account\", \"IsUsernameAvailable\").pipe(map(isAvailable => isAvailable.value.toLowerCase() === \"true\" ? null : {\n        \"usernameValidator-MSG\": \"This username is not available\"\n      }), catchError(() => of(null)));\n    };\n  }\n}\nUsernameValidator.ɵfac = function UsernameValidator_Factory(t) {\n  return new (t || UsernameValidator)();\n};\nUsernameValidator.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsernameValidator,\n  factory: UsernameValidator.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAiBA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;AAChD,SAASC,OAAO,QAAQ,mBAAmB;;AAI3C,OAAM,MAAOC,iBAAiB;EAE5B,OAAOC,eAAe,CAACC,oBAA0C;IAC/D,OAAQC,OAAwB,IAAyC;MACvE,OAAOD,oBAAoB,CAACE,eAAe,CAAmB,IAAIL,OAAO,CAACI,OAAO,CAACE,KAAK,CAAC,EAAE,SAAS,EAAE,qBAAqB,CAAC,CACxHC,IAAI,CACHR,GAAG,CAAES,WAAoB,IAAMA,WAAW,CAACF,KAAK,CAACG,WAAW,EAAE,KAAK,MAAM,GAAG,IAAI,GAAG;QAAE,uBAAuB,EAAE;MAAgC,CAAG,CAAC,EAClJX,UAAU,CAAC,MAAMD,EAAE,CAAC,IAAI,CAAC,CAAC,CAC3B;IACL,CAAC;EACH;;AAVWI,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAS,SAAjBT,iBAAiB;EAAAU,YADJ;AAAM","names":["of","catchError","map","Generic","UsernameValidator","createValidator","viewModelDataservice","control","actionViewModel","value","pipe","isAvailable","toLowerCase","factory","providedIn"],"sourceRoot":"","sources":["C:\\Projects\\web\\ToDoDotNetSix\\ToDoDotNetSixWeb\\ClientApp\\src\\app\\shared\\validators\\username.validator.ts"],"sourcesContent":["/**************************************************************************\r\n*\r\n*  System:    ToDo (Web)\r\n*  Module:    Client App \\ Shared \\ Validators\r\n*  Date:      16 AUG 2023\r\n*  Author:    Gary Moran (GM)\r\n*  Function:  Username Validator\r\n*  Notes:     \r\n*\r\n*                   : History of Amendments :\r\n*  Date        Name        Brief description                \r\n*  ----------- ----------  ---------------------------------------------\r\n*  16 AUG 2023 GM          Created\r\n************************************************************************/\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { AbstractControl, AsyncValidatorFn, ValidationErrors, } from '@angular/forms';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Generic } from '../models/generic';\r\nimport { ViewModelDataService } from '../services/view-model-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UsernameValidator {\r\n\r\n  static createValidator(viewModelDataservice: ViewModelDataService): AsyncValidatorFn {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n      return viewModelDataservice.actionViewModel<Generic, Generic>(new Generic(control.value), \"account\", \"IsUsernameAvailable\")\r\n        .pipe(\r\n          map((isAvailable: Generic) => (isAvailable.value.toLowerCase() === \"true\" ? null : { \"usernameValidator-MSG\": \"This username is not available\" })),\r\n          catchError(() => of(null))\r\n        );\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}