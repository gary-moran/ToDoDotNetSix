{"ast":null,"code":"import { take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./app-config.service\";\nexport let ViewModelDataService = /*#__PURE__*/(() => {\n  class ViewModelDataService {\n    constructor(http, appConfigService) {\n      this.http = http;\n      this.appConfigService = appConfigService;\n      this.apiBaseUrl = \"\";\n      // extract API base URL from App Config\n      let config = [{\n        \"WebApi\": \"\"\n      }];\n      this.appConfigService.AppConfig.pipe(take(1)).subscribe(cfg => {\n        config = cfg;\n      });\n      this.apiBaseUrl = config.WebApi;\n    }\n    /**\r\n     * Get View Model\r\n     * @type T\r\n     * @param controller Controller Name\r\n     * @returns View Model\r\n     */\n    getViewModel(controller, id) {\n      return this.http.get(`${this.apiBaseUrl}/api/${controller}/${id}`);\n    }\n    /**\r\n     * Get View Model List\r\n     * @type T\r\n     * @param controller Controller Name\r\n     * @returns View Model array\r\n     */\n    getViewModelList(controller) {\n      return this.http.get(`${this.apiBaseUrl}/api/${controller}/`);\n    }\n    /**\r\n    * Action View Model\r\n    * @type T\r\n    * @param model View Model\r\n    * @param controller Controller Name\r\n    * @param method Method Name\r\n    * @returns Generic View Model\r\n    */\n    actionViewModel(model, controller, methodName) {\n      return this.http.post(`${this.apiBaseUrl}/api/${controller}/${methodName}`, model);\n    }\n    /**\r\n    * Add View Model\r\n    * @type T\r\n    * @param model View Model\r\n    * @param controller Controller Name\r\n    * @returns Generic View Model\r\n    */\n    addViewModel(model, controller) {\n      return this.http.post(`${this.apiBaseUrl}/api/${controller}/`, model);\n    }\n    /**\r\n    * Update View Model\r\n    * @type T\r\n    * @param model View Model\r\n    * @param controller Controller Name\r\n    * @param id ID\r\n    * @returns Generic View Model\r\n    */\n    updateViewModel(model, controller, id) {\n      return this.http.put(`${this.apiBaseUrl}/api/${controller}/${id}`, model);\n    }\n    /**\r\n     * Delete View Model\r\n     * @param controller Controller Name\r\n     * @param id\r\n     * @returns true if successful\r\n     */\n    deleteViewModel(controller, id) {\n      return this.http.delete(`${this.apiBaseUrl}/api/${controller}/${id}`);\n    }\n  }\n  ViewModelDataService.ɵfac = function ViewModelDataService_Factory(t) {\n    return new (t || ViewModelDataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AppConfigService));\n  };\n  ViewModelDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ViewModelDataService,\n    factory: ViewModelDataService.ɵfac,\n    providedIn: 'root'\n  });\n  return ViewModelDataService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}