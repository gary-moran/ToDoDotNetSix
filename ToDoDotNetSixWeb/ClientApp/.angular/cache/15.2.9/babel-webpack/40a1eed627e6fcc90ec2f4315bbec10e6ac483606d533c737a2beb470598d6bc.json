{"ast":null,"code":"import _asyncToGenerator from \"C:/Projects/web/ToDoDotNetSix/ToDoDotNetSixWeb/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport { ControlValidation } from '../../shared/utilities/control-validation';\nimport { ElementFocus } from '../../shared/utilities/element-focus';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../shared/services/view-model-data.service\";\nimport * as i2 from \"../../shared/services/whitelist.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../shared/services/message.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../shared/components/element-validation-message/element-validation-message.component\";\nimport * as i7 from \"../../shared/directives/whitelist\";\nfunction LoginComponent_element_validation_message_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"element-validation-message\", 16);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"model\", ctx_r0.loginForm.get(\"username\"));\n  }\n}\nfunction LoginComponent_element_validation_message_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"element-validation-message\", 16);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"model\", ctx_r1.loginForm.get(\"password\"));\n  }\n}\nexport class LoginComponent {\n  constructor(viewModelDataService, whitelistService, formBuilder, messageService) {\n    this.viewModelDataService = viewModelDataService;\n    this.whitelistService = whitelistService;\n    this.formBuilder = formBuilder;\n    this.messageService = messageService;\n    this.elementHasFocus = ElementFocus.elementHasFocus;\n    this.isControlInvalid = ControlValidation.isInvalid;\n    this.isProcessing = false;\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.initForm();\n      _this.usernameWhitelist = yield _this.whitelistService.getWhitelist(\"USERNAME\");\n      _this.passwordWhitelist = yield _this.whitelistService.getWhitelist(\"PASSWORD\");\n    })();\n  }\n  /**\r\n   * Initialise Form\r\n   */\n  initForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', {\n        validators: [Validators.required],\n        updateOn: 'blur'\n      }],\n      password: ['', {\n        validators: [Validators.required],\n        updateOn: 'blur'\n      }]\n    });\n  }\n  onLogin() {}\n  onCancel() {}\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ViewModelDataService), i0.ɵɵdirectiveInject(i2.WhitelistService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.MessageService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 23,\n  vars: 7,\n  consts: [[\"role\", \"main\", 1, \"container\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"g-2\"], [1, \"mb-2\", \"form-floating\", \"col-md-6\"], [\"id\", \"username\", \"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"username\", \"maxLength\", \"40\", 1, \"form-control\", 3, \"whitelist\"], [3, \"model\", 4, \"ngIf\"], [\"for\", \"name\", 1, \"form-label\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"password\", \"maxLength\", \"40\", 1, \"form-control\", 3, \"whitelist\"], [\"for\", \"password\", 1, \"form-label\"], [1, \"gap-2\", \"d-flex\", \"justify-content-end\"], [\"type\", \"submit\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [3, \"model\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"main\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\", 3);\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7);\n      i0.ɵɵelement(9, \"input\", 8);\n      i0.ɵɵtemplate(10, LoginComponent_element_validation_message_10_Template, 1, 1, \"element-validation-message\", 9);\n      i0.ɵɵelementStart(11, \"label\", 10);\n      i0.ɵɵtext(12, \"Name\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 7);\n      i0.ɵɵelement(14, \"input\", 11);\n      i0.ɵɵtemplate(15, LoginComponent_element_validation_message_15_Template, 1, 1, \"element-validation-message\", 9);\n      i0.ɵɵelementStart(16, \"label\", 12);\n      i0.ɵɵtext(17, \"Password\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 13)(19, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵtext(20, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_21_listener() {\n        return ctx.onCancel();\n      });\n      i0.ɵɵtext(22, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"whitelist\", ctx.usernameWhitelist);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.elementHasFocus(\"username\") && ctx.isControlInvalid(ctx.loginForm.get(\"username\")));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"whitelist\", ctx.passwordWhitelist);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.elementHasFocus(\"password\") && ctx.isControlInvalid(ctx.loginForm.get(\"password\")));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.isProcessing || !ctx.loginForm.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.isProcessing);\n    }\n  },\n  dependencies: [i5.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i6.ElementValidationMessageComponent, i7.WhitelistValidatorDirective],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAgBA,SAAiCA,UAAU,QAAQ,gBAAgB;AAGnE,SAASC,iBAAiB,QAAQ,2CAA2C;AAC7E,SAASC,YAAY,QAAQ,sCAAsC;;;;;;;;;;;ICAvDC,iDAAiL;;;;IAArJA,wDAAmC;;;;;IAM/DA,iDAAiL;;;;IAArJA,wDAAmC;;;ADG3E,OAAM,MAAOC,cAAc;EAWzBC,YAAoBC,oBAA0C,EAAUC,gBAAkC,EAAUC,WAAwB,EAAUC,cAA8B;IAAhK,yBAAoB,GAApBH,oBAAoB;IAAgC,qBAAgB,GAAhBC,gBAAgB;IAA4B,gBAAW,GAAXC,WAAW;IAAuB,mBAAc,GAAdC,cAAc;IATpK,oBAAe,GAAGP,YAAY,CAACQ,eAAe;IAC9C,qBAAgB,GAAGT,iBAAiB,CAACU,SAAS;IAK9C,iBAAY,GAAY,KAAK;EAG4J;EAEnLC,QAAQ;IAAA;IAAA;MACZ,KAAI,CAACC,QAAQ,EAAE;MACf,KAAI,CAACC,iBAAiB,SAAS,KAAI,CAACP,gBAAgB,CAACQ,YAAY,CAAC,UAAU,CAAC;MAC7E,KAAI,CAACC,iBAAiB,SAAS,KAAI,CAACT,gBAAgB,CAACQ,YAAY,CAAC,UAAU,CAAC;IAAC;EAChF;EAEA;;;EAGAF,QAAQ;IACN,IAAI,CAACI,SAAS,GAAG,IAAI,CAACT,WAAW,CAACU,KAAK,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAE;QAAEC,UAAU,EAAE,CAACpB,UAAU,CAACqB,QAAQ,CAAC;QAAEC,QAAQ,EAAE;MAAM,CAAE,CAAC;MACvEC,QAAQ,EAAE,CAAC,EAAE,EAAE;QAAEH,UAAU,EAAE,CAACpB,UAAU,CAACqB,QAAQ,CAAC;QAAEC,QAAQ,EAAE;MAAM,CAAE;KACvE,CAAC;EACJ;EAEAE,OAAO,IAAK;EAEZC,QAAQ,IAAK;;AA/BFrB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC7B3B3B,+BAAoC;MASPA,qBAAK;MAAAA,iBAAK;MAGnCA,8BAAuB;MAEJA;QAAA,OAAY4B,aAAS;MAAA,EAAC;MAErC5B,8BAAqB;MAGjBA,2BAAyJ;MACzJA,+GAAiL;MACjLA,kCAAqC;MAAAA,qBAAI;MAAAA,iBAAQ;MAGnDA,+BAAyC;MACvCA,6BAA6J;MAC7JA,+GAAiL;MACjLA,kCAAyC;MAAAA,yBAAQ;MAAAA,iBAAQ;MAK7DA,gCAA8C;MACIA;QAAA,OAAS4B,aAAS;MAAA,EAAC;MAAoD5B,sBAAK;MAAAA,iBAAS;MACrIA,mCAA+F;MAA/CA;QAAA,OAAS4B,cAAU;MAAA,EAAC;MAA2B5B,uBAAM;MAAAA,iBAAS;;;MApB1EA,eAAuB;MAAvBA,yCAAuB;MAK8DA,eAA+B;MAA/BA,iDAA+B;MACrFA,eAAiF;MAAjFA,8GAAiF;MAKvBA,eAA+B;MAA/BA,iDAA+B;MACzFA,eAAiF;MAAjFA,8GAAiF;MAOhFA,eAAkD;MAAlDA,mEAAkD;MACjDA,eAAyB;MAAzBA,2CAAyB","names":["Validators","ControlValidation","ElementFocus","i0","LoginComponent","constructor","viewModelDataService","whitelistService","formBuilder","messageService","elementHasFocus","isInvalid","ngOnInit","initForm","usernameWhitelist","getWhitelist","passwordWhitelist","loginForm","group","username","validators","required","updateOn","password","onLogin","onCancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Projects\\web\\ToDoDotNetSix\\ToDoDotNetSixWeb\\ClientApp\\src\\app\\todo\\login\\login.component.ts","C:\\Projects\\web\\ToDoDotNetSix\\ToDoDotNetSixWeb\\ClientApp\\src\\app\\todo\\login\\login.component.html"],"sourcesContent":["/**************************************************************************\n*\n*  System:    ToDo (Web)\n*  Module:    Client App \\ Todo\n*  Date:      09 AUG 2023\n*  Author:    Gary Moran (GM)\n*  Function:  Login\n*  Notes:     \n*\n*                   : History of Amendments :\n*  Date        Name        Brief description                \n*  ----------- ----------  ---------------------------------------------\n*  09 AUG 2023 GM          Created\n************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MessageService } from '../../shared/services/message.service';\r\nimport { ViewModelDataService } from '../../shared/services/view-model-data.service';\r\nimport { ControlValidation } from '../../shared/utilities/control-validation';\r\nimport { ElementFocus } from '../../shared/utilities/element-focus';\r\nimport { Whitelist } from '../../shared/models/whitelist';\r\nimport { WhitelistService } from '../../shared/services/whitelist.service';\r\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n\n  elementHasFocus = ElementFocus.elementHasFocus;\r\n  isControlInvalid = ControlValidation.isInvalid;\n\n  usernameWhitelist: Whitelist | undefined;\n  passwordWhitelist: Whitelist | undefined;\n\n  isProcessing: boolean = false;\n  loginForm!: FormGroup;\n\n  constructor(private viewModelDataService: ViewModelDataService, private whitelistService: WhitelistService, private formBuilder: FormBuilder, private messageService: MessageService,) { }\n\n  async ngOnInit(): Promise<void> {\r\n    this.initForm();\r\n    this.usernameWhitelist = await this.whitelistService.getWhitelist(\"USERNAME\");\r\n    this.passwordWhitelist = await this.whitelistService.getWhitelist(\"PASSWORD\");\r\n  }\n\n  /**\r\n   * Initialise Form\r\n   */\r\n  initForm() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', { validators: [Validators.required], updateOn: 'blur' }],\r\n      password: ['', { validators: [Validators.required], updateOn: 'blur' }],\r\n    });\r\n  }\n\n  onLogin() { }\n\n  onCancel() { }\n}\n","<main class=\"container\" role=\"main\">\r\n\r\n  <!--<div class=\"row\">\r\n    <h1>Login</h1>\r\n  </div>-->\r\n\r\n  <div class=\"card\">\r\n\r\n    <div class=\"card-header\">\r\n      <h5 class=\"card-title\">Login</h5>\r\n    </div>\r\n\r\n    <div class=\"card-body\">\r\n\r\n      <form novalidate (ngSubmit)=\"onLogin()\" [formGroup]=\"loginForm\">\r\n\r\n        <div class=\"row g-2\">\r\n\r\n          <div class=\"mb-2 form-floating col-md-6\">\r\n            <input class=\"form-control\" id=\"username\" type=\"text\" formControlName=\"username\" placeholder=\"username\" maxLength=\"40\" [whitelist]=\"usernameWhitelist\" />\r\n            <element-validation-message [model]=\"loginForm.get('username')\" *ngIf=\"!elementHasFocus('username') && isControlInvalid(loginForm.get('username'))\"></element-validation-message>\r\n            <label class=\"form-label\" for=\"name\">Name</label>\r\n          </div>\r\n\r\n          <div class=\"mb-2 form-floating col-md-6\">\r\n            <input class=\"form-control\" id=\"password\" type=\"password\" formControlName=\"password\" placeholder=\"password\" maxLength=\"40\" [whitelist]=\"passwordWhitelist\" />\r\n            <element-validation-message [model]=\"loginForm.get('password')\" *ngIf=\"!elementHasFocus('password') && isControlInvalid(loginForm.get('password'))\"></element-validation-message>\r\n            <label class=\"form-label\" for=\"password\">Password</label>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"gap-2 d-flex justify-content-end\">\r\n          <button type=\"submit\" class=\"btn btn-secondary\" (click)=\"onLogin()\" [disabled]=\"isProcessing || !this.loginForm.valid\">Login</button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"onCancel()\" [disabled]=\"isProcessing\">Cancel</button>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n</main>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}