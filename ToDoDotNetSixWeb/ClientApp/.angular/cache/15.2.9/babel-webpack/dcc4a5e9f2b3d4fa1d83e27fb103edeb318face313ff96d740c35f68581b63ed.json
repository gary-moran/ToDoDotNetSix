{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/authentication.service\";\nexport class AuthGuard {\n  constructor(router, authenticationService) {\n    this.router = router;\n    this.authenticationService = authenticationService;\n  }\n  canActivate(route, state) {\n    if (this.authenticationService.isAuthenticated()) return true;else {\n      this.router.navigate(['/login'], {\n        queryParams: {\n          returnUrl: state.url\n        }\n      });\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthenticationService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAuBA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,MAAc,EAAUC,qBAA4C;IAApE,WAAM,GAAND,MAAM;IAAkB,0BAAqB,GAArBC,qBAAqB;EAA2B;EAE5FC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IAEnE,IAAI,IAAI,CAACH,qBAAqB,CAACI,eAAe,EAAE,EAC9C,OAAO,IAAI,CAAC,KACT;MACH,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;QAAEC,WAAW,EAAE;UAAEC,SAAS,EAAEJ,KAAK,CAACK;QAAG;MAAE,CAAE,CAAC;MAC3E,OAAO,KAAK;;EAGhB;;AAbWX,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAY,SAATZ,SAAS;EAAAa,YAFR;AAAM","names":["AuthGuard","constructor","router","authenticationService","canActivate","route","state","isAuthenticated","navigate","queryParams","returnUrl","url","factory","providedIn"],"sourceRoot":"","sources":["C:\\Projects\\web\\ToDoDotNetSix\\ToDoDotNetSixWeb\\ClientApp\\src\\app\\shared\\guards\\auth.guard.ts"],"sourcesContent":["/**************************************************************************\n*\n*  System:    ToDo (Web)\n*  Module:    Client App \\ Shared \\ Guards\n*  Date:      14 AUG 2023\n*  Author:    Gary Moran (GM)\n*  Function:  Auth Guard\n*  Notes:     \n*\n*                   : History of Amendments :\n*  Date        Name        Brief description                \n*  ----------- ----------  ---------------------------------------------\n*  09 AUG 2023 GM          Created\n************************************************************************/\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private authenticationService: AuthenticationService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    if (this.authenticationService.isAuthenticated())\n      return true;\n    else {\n      this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n      return false;\r\n    }\n\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}