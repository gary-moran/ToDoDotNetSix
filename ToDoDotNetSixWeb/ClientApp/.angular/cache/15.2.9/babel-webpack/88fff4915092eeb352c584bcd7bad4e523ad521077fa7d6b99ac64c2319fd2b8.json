{"ast":null,"code":"import _asyncToGenerator from \"C:/Projects/web/ToDoDotNetSix/ToDoDotNetSixWeb/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport { ControlValidation } from '../../shared/utilities/control-validation';\nimport { ElementFocus } from '../../shared/utilities/element-focus';\nimport { Whitelist } from '../../shared/models/whitelist';\nimport { TextValidators } from '../../shared/validators/text.validator';\nimport { Login } from '../../shared/models/login';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../shared/services/authentication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../shared/services/whitelist.service\";\nimport * as i5 from \"../../shared/services/message.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../shared/components/element-validation-message/element-validation-message.component\";\nfunction LoginComponent_form_6_element_validation_message_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"element-validation-message\", 17);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"model\", ctx_r1.loginForm.get(\"username\"));\n  }\n}\nfunction LoginComponent_form_6_element_validation_message_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"element-validation-message\", 17);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"model\", ctx_r2.loginForm.get(\"password\"));\n  }\n}\nfunction LoginComponent_form_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_6_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onLogin());\n    });\n    i0.ɵɵelementStart(1, \"div\", 7)(2, \"div\", 8);\n    i0.ɵɵelement(3, \"input\", 9);\n    i0.ɵɵtemplate(4, LoginComponent_form_6_element_validation_message_4_Template, 1, 1, \"element-validation-message\", 10);\n    i0.ɵɵelementStart(5, \"label\", 11);\n    i0.ɵɵtext(6, \"Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 8);\n    i0.ɵɵelement(8, \"input\", 12);\n    i0.ɵɵtemplate(9, LoginComponent_form_6_element_validation_message_9_Template, 1, 1, \"element-validation-message\", 10);\n    i0.ɵɵelementStart(10, \"label\", 13);\n    i0.ɵɵtext(11, \"Password\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"div\", 14)(13, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function LoginComponent_form_6_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onLogin());\n    });\n    i0.ɵɵtext(14, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function LoginComponent_form_6_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onCancel());\n    });\n    i0.ɵɵtext(16, \"Cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.loginForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.elementHasFocus(\"username\") && ctx_r0.isControlInvalid(ctx_r0.loginForm.get(\"username\")));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.elementHasFocus(\"password\") && ctx_r0.isControlInvalid(ctx_r0.loginForm.get(\"password\")));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isProcessing || !ctx_r0.loginForm.valid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isProcessing);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authenticationService, router, formBuilder, whitelistService, messageService) {\n      this.authenticationService = authenticationService;\n      this.router = router;\n      this.formBuilder = formBuilder;\n      this.whitelistService = whitelistService;\n      this.messageService = messageService;\n      this.elementHasFocus = ElementFocus.elementHasFocus;\n      this.isControlInvalid = ControlValidation.isInvalid;\n      this.usernameWhitelist = new Whitelist();\n      this.passwordWhitelist = new Whitelist();\n      this.isProcessing = false;\n    }\n    ngOnInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.usernameWhitelist = yield _this.whitelistService.getWhitelist(\"USERNAME\");\n        _this.passwordWhitelist = yield _this.whitelistService.getWhitelist(\"PASSWORD\");\n        _this.initForm();\n      })();\n    }\n    /**\r\n     * Initialise Form\r\n     */\n    initForm() {\n      this.loginForm = this.formBuilder.group({\n        username: ['', {\n          validators: [Validators.required, TextValidators.whitelistValidator(this.usernameWhitelist), TextValidators.minLengthValidator(4)],\n          updateOn: 'blur'\n        }],\n        password: ['', {\n          validators: [Validators.required, TextValidators.whitelistValidator(this.passwordWhitelist), TextValidators.minLengthValidator(8)],\n          updateOn: 'blur'\n        }]\n      });\n    }\n    /**\r\n     * Login\r\n     */\n    onLogin() {\n      this.isProcessing = true;\n      const login = new Login(this.loginForm.value);\n      this.authenticationService.login(login).subscribe(success => {\n        if (success) this.router.navigate([\"todo\"]);\n        this.isProcessing = false;\n      }, error => {\n        this.messageService.sendErrorMessage(error);\n        this.isProcessing = false;\n      });\n    }\n    /**\r\n     * Cancel\r\n     */\n    onCancel() {\n      this.isProcessing = true;\n      this.loginForm.patchValue(new Login());\n      this.isProcessing = false;\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.WhitelistService), i0.ɵɵdirectiveInject(i5.MessageService));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[\"role\", \"main\", 1, \"container\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"g-2\"], [1, \"mb-2\", \"form-floating\", \"col-md-6\"], [\"id\", \"username\", \"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"username\", \"maxLength\", \"40\", 1, \"form-control\"], [3, \"model\", 4, \"ngIf\"], [\"for\", \"name\", 1, \"form-label\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"password\", \"maxLength\", \"40\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [1, \"gap-2\", \"d-flex\", \"justify-content-end\"], [\"type\", \"submit\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [3, \"model\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"main\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\", 3);\n        i0.ɵɵtext(4, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtemplate(6, LoginComponent_form_6_Template, 17, 5, \"form\", 5);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm);\n      }\n    },\n    dependencies: [i6.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i7.ElementValidationMessageComponent]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}