{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Generic } from '../models/generic';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/view-model-data.service\";\nexport let UsernameValidator = /*#__PURE__*/(() => {\n  class UsernameValidator {\n    constructor(viewModelDataservice) {\n      this.viewModelDataservice = viewModelDataservice;\n    }\n    validate(control) {\n      return this.viewModelDataservice.actionViewModel(new Generic(control.value), \"account\", \"IsUsernameAvailable\").pipe(map(isAvailable => isAvailable.value.toLowerCase() === \"true\" ? null : {\n        \"usernameValidator-MSG\": \"This username is not available\"\n      }), catchError(() => of(null)));\n    }\n  }\n  UsernameValidator.ɵfac = function UsernameValidator_Factory(t) {\n    return new (t || UsernameValidator)(i0.ɵɵinject(i1.ViewModelDataService));\n  };\n  UsernameValidator.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsernameValidator,\n    factory: UsernameValidator.ɵfac,\n    providedIn: 'root'\n  });\n  return UsernameValidator;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}