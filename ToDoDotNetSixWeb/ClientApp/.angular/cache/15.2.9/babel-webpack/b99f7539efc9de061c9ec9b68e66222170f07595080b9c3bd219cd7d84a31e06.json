{"ast":null,"code":"/**************************************************************************\r\n*\r\n*  System:    ToDo (Web)\r\n*  Module:    Client App \\ Shared \\ Validators\r\n*  Date:      09 AUG 2023\r\n*  Author:    Gary Moran (GM)\r\n*  Function:  Text Validators\r\n*  Notes:\r\n*\r\n*                   : History of Amendments :\r\n*  Date        Name        Brief description\r\n*  ----------- ----------  ---------------------------------------------\r\n*  09 AUG 2023 GM          Created\r\n************************************************************************/\nexport class TextValidators {\n  /**\r\n  * whitelist Validator\r\n  * @param doValidate\r\n  */\n  static whitelistValidator(whitelist) {\n    return control => TextValidators.whitelistValidatorFn(control, whitelist);\n  }\n  /**\r\n  * Whitelist Validator Function\r\n  * @param control Control\r\n  */\n  static whitelistValidatorFn(control, whitelist) {\n    let errors = null;\n    // Validate input    \n    if (control.value !== null) {\n      if (control.value !== undefined) {\n        if (control.value != \"\") {\n          if (!this.validateWhitelist(control.value.toString(), whitelist)) {\n            errors = {\n              'whitelistValidator-MSG': whitelist.error\n            };\n          }\n        }\n      }\n    }\n    return errors;\n  }\n  /**\r\n   * validateWhitelist Validate whitelist\r\n   * @param whitelist whitelist\r\n   */\n  static validateWhitelist(value, whitelist) {\n    const regex = new RegExp(whitelist.pattern);\n    if (value.match(regex)) return true;else return false;\n  }\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;AAoBA,OAAM,MAAOA,cAAc;EAEzB;;;;EAIA,OAAOC,kBAAkB,CAACC,SAAoB;IAC5C,OAAQC,OAAwB,IAA6BH,cAAc,CAACI,oBAAoB,CAACD,OAAO,EAAED,SAAS,CAAC;EACtH;EAEA;;;;EAIA,OAAOE,oBAAoB,CAACD,OAAwB,EAAED,SAAoB;IAExE,IAAIG,MAAM,GAAQ,IAAI;IAEtB;IACA,IAAIF,OAAO,CAACG,KAAK,KAAK,IAAI,EAAE;MAC1B,IAAIH,OAAO,CAACG,KAAK,KAAKC,SAAS,EAAE;QAC/B,IAAIJ,OAAO,CAACG,KAAK,IAAI,EAAE,EAAE;UACvB,IAAI,CAAC,IAAI,CAACE,iBAAiB,CAACL,OAAO,CAACG,KAAK,CAACG,QAAQ,EAAE,EAAEP,SAAS,CAAC,EAAE;YAChEG,MAAM,GAAG;cAAE,wBAAwB,EAAEH,SAAS,CAACQ;YAAK,CAAE;;;;;IAM9D,OAAOL,MAAM;EACf;EAEA;;;;EAIA,OAAOG,iBAAiB,CAACF,KAAa,EAAEJ,SAAoB;IAE1D,MAAMS,KAAK,GAAG,IAAIC,MAAM,CAACV,SAAS,CAACW,OAAO,CAAC;IAC3C,IAAIP,KAAK,CAACQ,KAAK,CAACH,KAAK,CAAC,EACpB,OAAO,IAAI,CAAC,KAEZ,OAAO,KAAK;EAChB","names":["TextValidators","whitelistValidator","whitelist","control","whitelistValidatorFn","errors","value","undefined","validateWhitelist","toString","error","regex","RegExp","pattern","match"],"sourceRoot":"","sources":["C:\\Projects\\web\\ToDoDotNetSix\\ToDoDotNetSixWeb\\ClientApp\\src\\app\\shared\\validators\\text.validator.ts"],"sourcesContent":["/**************************************************************************\r\n*\r\n*  System:    ToDo (Web)\r\n*  Module:    Client App \\ Shared \\ Validators\r\n*  Date:      09 AUG 2023\r\n*  Author:    Gary Moran (GM)\r\n*  Function:  Text Validators\r\n*  Notes:     \r\n*\r\n*                   : History of Amendments :\r\n*  Date        Name        Brief description                \r\n*  ----------- ----------  ---------------------------------------------\r\n*  09 AUG 2023 GM          Created\r\n************************************************************************/\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { Whitelist } from '../models/whitelist';\r\n\r\nexport class TextValidators {\r\n\r\n  /**\r\n  * whitelist Validator\r\n  * @param doValidate\r\n  */\r\n  static whitelistValidator(whitelist: Whitelist): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => TextValidators.whitelistValidatorFn(control, whitelist);\r\n  }\r\n\r\n  /**\r\n  * Whitelist Validator Function\r\n  * @param control Control\r\n  */\r\n  static whitelistValidatorFn(control: AbstractControl, whitelist: Whitelist): { [key: string]: any } {\r\n\r\n    let errors: any = null;\r\n\r\n    // Validate input    \r\n    if (control.value !== null) {\r\n      if (control.value !== undefined) {\r\n        if (control.value != \"\") {\r\n          if (!this.validateWhitelist(control.value.toString(), whitelist)) {\r\n            errors = { 'whitelistValidator-MSG': whitelist.error };\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  }\r\n\r\n  /**\r\n   * validateWhitelist Validate whitelist\r\n   * @param whitelist whitelist\r\n   */\r\n  static validateWhitelist(value: string, whitelist: Whitelist): boolean {\r\n\r\n    const regex = new RegExp(whitelist.pattern);    \r\n    if (value.match(regex))\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}