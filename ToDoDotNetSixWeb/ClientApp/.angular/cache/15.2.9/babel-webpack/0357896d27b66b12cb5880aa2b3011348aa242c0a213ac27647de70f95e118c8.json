{"ast":null,"code":"import { switchMap, first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./app-config.service\";\nexport let AppConfigInterceptorService = /*#__PURE__*/(() => {\n  class AppConfigInterceptorService {\n    constructor(appConfigService) {\n      this.appConfigService = appConfigService;\n      this.urlExceptions = [\"/api/generatelanguages\", \"/api/config\"];\n      this.appConfigService.AppConfig.subscribe(config => {\n        this.config = config;\n      });\n    }\n    /**\r\n     * intercept\r\n     * @param request\r\n     * @param next\r\n     * @param retry\r\n     * @returns\r\n     */\n    intercept(request, next, retry = 0) {\n      if (request.url.startsWith(\"/api/\") && !this.urlExceptions.includes(request.url.toLowerCase())) {\n        if (this.config) {\n          return next.handle(request.clone({\n            url: this.config.WebApi + request.url\n          }));\n        } else {\n          return this.appConfigService.AppConfig.pipe(first(), switchMap(config => {\n            return next.handle(request.clone({\n              url: config.WebApi + request.url\n            }));\n          }));\n        }\n      } else {\n        return next.handle(request);\n      }\n    }\n  }\n  AppConfigInterceptorService.ɵfac = function AppConfigInterceptorService_Factory(t) {\n    return new (t || AppConfigInterceptorService)(i0.ɵɵinject(i1.AppConfigService));\n  };\n  AppConfigInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppConfigInterceptorService,\n    factory: AppConfigInterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n  return AppConfigInterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}